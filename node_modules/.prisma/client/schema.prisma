generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  instructor
  student
}

model User {
  id       Int     @id @default(autoincrement())
  name     String
  email    String  @unique
  password String
  role     Role
  avatar   String?

  coursesCreated  Course[]     @relation("InstructorCourses")
  coursesEnrolled Course[]     @relation("StudentCourses")
  lectures        Lecture[]    @relation("InstructorLectures")
  assignments     Assignment[] @relation("InstructorAssignments")
  submissions     Submission[] @relation("StudentSubmissions")
  files           File[]       @relation("UserFiles")
  attachments     Attachment[] @relation("UserAttachments")
}

model Course {
  id          Int    @id @default(autoincrement())
  title       String
  description String
  createdBy   User   @relation("InstructorCourses", fields: [createdById], references: [id])
  createdById Int
  students    User[] @relation("StudentCourses")

  lectures    Lecture[]
  assignments Assignment[]
}

model Lecture {
  id          Int          @id @default(autoincrement())
  title       String
  content     String
  course      Course       @relation(fields: [courseId], references: [id])
  courseId    Int
  videoUrl    String?
  attachments Attachment[] @relation("LectureAttachments")

  instructor   User @relation("InstructorLectures", fields: [instructorId], references: [id])
  instructorId Int
}

model Attachment {
  id           Int    @id @default(autoincrement())
  filename     String
  url          String
  uploadedBy   User   @relation("UserAttachments", fields: [uploadedById], references: [id])
  uploadedById Int

  lecture   Lecture? @relation("LectureAttachments", fields: [lectureId], references: [id])
  lectureId Int?
}

model Assignment {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  course      Course   @relation(fields: [courseId], references: [id])
  courseId    Int
  dueDate     DateTime

  submissions  Submission[]
  instructor   User         @relation("InstructorAssignments", fields: [instructorId], references: [id])
  instructorId Int
}

model Submission {
  id           Int        @id @default(autoincrement())
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  assignmentId Int
  student      User       @relation("StudentSubmissions", fields: [studentId], references: [id])
  studentId    Int
  file         File?      @relation(fields: [fileId], references: [id])
  fileId       Int?
  submittedAt  DateTime
  grade        Float?
}

model File {
  id           Int    @id @default(autoincrement())
  filename     String
  url          String
  uploadedBy   User   @relation("UserFiles", fields: [uploadedById], references: [id])
  uploadedById Int

  submissions Submission[]
}
